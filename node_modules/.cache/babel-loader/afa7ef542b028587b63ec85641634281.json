{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst intialAuthenticationState = {\n  isAuthenticated: false\n};\nconst authenticationSlice = createSlice({\n  name: \"Authentication\",\n  initialState: intialAuthenticationState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = state.true;\n    },\n    logout(state) {\n      state.isAuthenticated = state.false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    authentication: authenticationSlice.reducer\n  }\n  // reducer: counterSlice.reducer,\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authenticationActions = authenticationSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggle","intialAuthenticationState","isAuthenticated","authenticationSlice","login","true","logout","false","store","reducer","authentication","counterActions","actions","authenticationActions"],"sources":["/home/divum/ReactJs/Redux/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nconst initialCounterState = { counter: 0, showCounter: true };\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\nconst intialAuthenticationState = { isAuthenticated: false };\nconst authenticationSlice = createSlice({\n  name: \"Authentication\",\n  initialState: intialAuthenticationState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = state.true;\n    },\n    logout(state) {\n      state.isAuthenticated = state.false;\n    },\n  },\n});\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    authentication: authenticationSlice.reducer,\n  },\n  // reducer: counterSlice.reducer,\n});\nexport const counterActions = counterSlice.actions;\nexport const authenticationActions = authenticationSlice.actions;\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAE9D,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAC7D,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAK,EAAE;MACfA,KAAK,CAACP,OAAO,EAAE;IACjB,CAAC;IACDQ,SAAS,CAACD,KAAK,EAAE;MACfA,KAAK,CAACP,OAAO,EAAE;IACjB,CAAC;IACDS,QAAQ,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGU,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,MAAM,CAACL,KAAK,EAAE;MACZA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AACF,MAAMY,yBAAyB,GAAG;EAAEC,eAAe,EAAE;AAAM,CAAC;AAC5D,MAAMC,mBAAmB,GAAGjB,WAAW,CAAC;EACtCK,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAES,yBAAyB;EACvCR,QAAQ,EAAE;IACRW,KAAK,CAACT,KAAK,EAAE;MACXA,KAAK,CAACO,eAAe,GAAGP,KAAK,CAACU,IAAI;IACpC,CAAC;IACDC,MAAM,CAACX,KAAK,EAAE;MACZA,KAAK,CAACO,eAAe,GAAGP,KAAK,CAACY,KAAK;IACrC;EACF;AACF,CAAC,CAAC;AAEF,MAAMC,KAAK,GAAGvB,cAAc,CAAC;EAC3BwB,OAAO,EAAE;IACPrB,OAAO,EAAEE,YAAY,CAACmB,OAAO;IAC7BC,cAAc,EAAEP,mBAAmB,CAACM;EACtC;EACA;AACF,CAAC,CAAC;;AACF,OAAO,MAAME,cAAc,GAAGrB,YAAY,CAACsB,OAAO;AAClD,OAAO,MAAMC,qBAAqB,GAAGV,mBAAmB,CAACS,OAAO;AAChE,eAAeJ,KAAK"},"metadata":{},"sourceType":"module"}